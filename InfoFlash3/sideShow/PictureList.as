package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.display.Loader;	import Pic2;		import flash.display.Stage;	import flash.display.Sprite;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import flash.display.Shape;        import flash.text.TextField;    import flash.text.StyleSheet;		public class PictureList extends MovieClip{		private var xmlRequest:URLRequest;         private var xmlLoader:URLLoader; 				private var faces:Array;	// a list of items		private var faceNum:int;	// a bookmark		private var faces_mc:MovieClip;						private var next_button:MovieClip;		private var prev_button:MovieClip;				private var faces_mc_targetX:int;     				private var infoField:TextField;		private var titleField:TextField;				private const FACE_WIDTH:int = 80;		private const FACE_OFFSET:int = 100;			public function PictureList(xmlFile:String) 		{				       //-------------add faces-------------------			this.faces = new Array();			this.faces_mc = new MovieClip();			addChild(this.faces_mc);			this.faceNum = 0;				      					   //------add texts--------------		   		    		    this.infoField = new TextField();			addChild(infoField);			this.infoField.x=300;			this.infoField.y=650;			this.infoField.width=200;			this.infoField.height=100;			            this.titleField = new TextField();			addChild(this.titleField);			this.titleField.x=250;			this.titleField.y=600;							       //-------------add button-------------------			this.next_button = new face_button();			this.prev_button = new face_button();			this.next_button.rotation = 180;			this.prev_button.x = 170;			this.prev_button.y = 600;			this.next_button.x = 400;			this.next_button.y = 600;			addChild(this.next_button);			addChild(this.prev_button);						this.prev_button.addEventListener(MouseEvent.CLICK,prevFace);			this.next_button.addEventListener(MouseEvent.CLICK,nextFace);						//-------------control update and animate face-------------------			addEventListener(Event.ENTER_FRAME,update); //  animate face						//-------------add load faces-------------------			this.xmlRequest = new URLRequest(xmlFile);			this.xmlLoader = new URLLoader(xmlRequest);			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaderHandler);									//-------------faces location(before and after)-------------------			this.faces_mc.x = 0;			this.faces_mc_targetX = this.faces_mc.x;					}								        //load xml        private function xmlLoaderHandler(event:Event):void		{			var imgData:XML = new XML(event.target.data);				var facelist:XMLList = imgData.makeup.inFace;				for (var i=0; i<facelist.length(); i++)			{				var f = new Pic2(facelist[i]);								f.x = i*FACE_WIDTH + FACE_OFFSET;				f.visible = false;								this.faces.push(f);				this.faces_mc.addChild(f);							}						// run the change item function as part of our intialization process			this.updateFace(0);		}		        //----------- move face ------------------------------------  		private function prevFace(evt:MouseEvent)		{			this.updateFace(-1);		}				private function nextFace(evt:MouseEvent)		{			this.updateFace(1);		}				// a function to handle cycling through the list of items		private function updateFace(dir:int)		{						this.faces[this.faceNum].visible = false;	// turn off the previous item			this.faceNum += dir;						// change our bookmark						// make sure the bookmark number isn't out of bounds			if (this.faceNum > (this.faces.length - 1))			{				this.faceNum = this.faces.length - 1;  //stop				//this.faceNum = 0;                        //loop			}						if (this.faceNum < 0)			{ 				this.faceNum = 0;                      // stop 				//this.faceNum = this.faces.length - 1;    // loop go back to first			}						// do everything we need to do to activate the new item						this.faces_mc_targetX = this.faceNum * -FACE_WIDTH;						this.infoField.htmlText = this.faces[this.faceNum].info_text;			this.titleField.htmlText = this.faces[this.faceNum].info_title;			this.faces[this.faceNum].visible = true;					}				private function update(evt:Event)		{			if (Math.abs(this.faces_mc.x - this.faces_mc_targetX) > 1)			{				// animate         //0.2 can slow down, if 1 will go there immidately				this.faces_mc.x += (this.faces_mc_targetX - this.faces_mc.x) * 0.2; 			}			else			{				this.faces_mc.x = this.faces_mc_targetX;			}		}									}	}