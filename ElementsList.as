package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.display.Loader;	import Elements;	import ElementsShow;	import flash.text.TextField;		public class ElementsList extends MovieClip{		private var xmlRequest:URLRequest;         private var xmlLoader:URLLoader; 				private var elementsPart:Array;		private var elementlist:XMLList;		private var elementShowlist:XMLList;				private var pointsArray:Array;				private var infoField:TextField;			private var dialog_mc:MovieClip;		private var closebtnIn_mc:MovieClip;				private var showElementsPart:Array;			public function ElementsList(xmlFile:String) 		{			this.xmlRequest = new URLRequest(xmlFile);			this.xmlLoader = new URLLoader(xmlRequest);			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaderHandler);						this.elementsPart = new Array();			this.pointsArray = new Array();			this.showElementsPart = new Array();											}				  private function xmlLoaderHandler(event:Event):void		{						var imgData:XML = new XML(event.target.data);				elementlist = imgData.wholeCostume;						trace('XML LOADER HANDLER');			for (var i=0; i<elementlist.length(); i++)			{				var f = new Elements(elementlist[i]);				this.elementsPart.push(f);				/*addChild(f);				f.visible = false;*/			}									var btn:hoverButton;								for (var k=0; k<elementsPart.length; k++)			{				trace(elementsPart[k]);				btn = new hoverButton(elementsPart[k].pointText);				this.pointsArray.push(btn);				addChild(btn);				btn.x = elementsPart[k].point_x;				btn.y = elementsPart[k].point_y;								btn.mcButton.addEventListener(MouseEvent.CLICK, makeButtonFunction(k));											}			// dialog_mc, closebtnIn_mc, infoField 要在這裡  不然會在point底下			this.dialog_mc = new dialog();			addChild(this.dialog_mc);			dialog_mc.visible=false;						closebtnIn_mc = new closebtnIn();	     	addChild(this.closebtnIn_mc);			closebtnIn_mc.visible=false;			closebtnIn_mc.x=960;			closebtnIn_mc.y=345;						this.infoField = new TextField();			addChild(this.infoField);			infoField.x=700;			infoField.y=400;			infoField.visible=false;						for (var j=0; j<elementlist.length(); j++)			{				var M = new ElementsShow(elementlist[j]);				this.showElementsPart.push(M);				addChild(M);				M.visible = false;			}								}				private function makeButtonFunction(buttonNum:int):Function		{			var f:Function = function()			{				trace('clicked button ' + buttonNum + '!!!!');				showPage(buttonNum);							}			return f;		}				private function showPage(page:int):void		{			// do everything you need to show page #page			dialog_mc.visible=true;			closebtnIn_mc.visible=true;						this.showElementsPart[page].visible = true;						infoField.visible=true;			this.infoField.text = this.showElementsPart[page].info_text;						closebtnIn_mc.addEventListener(MouseEvent.CLICK, closeFUntion);					}				private function closeFUntion(e:MouseEvent):void		{			dialog_mc.visible=false;			closebtnIn_mc.visible=false;						this.showElementsPart[0].visible = false;			this.showElementsPart[1].visible = false;			this.showElementsPart[2].visible = false;						infoField.visible=false;			closebtnIn_mc.removeEventListener(MouseEvent.CLICK, closeFUntion);					}							}	}